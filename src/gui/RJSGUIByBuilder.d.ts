import { RJSGUI } from './RJSGUI';
import { Group, Sprite } from 'phaser-ce';
import RJS from '../core/RJS';
import { GUIAssets } from './Assets';
export interface RJSGUIByBuilderInterface<T, TSprite> extends RJSGUI {
    hideMenu(menu: any, mute: any, callback: any): any;
    changeMenu(menu: any): any;
    createChoiceBox(choice: any, pos: any, index: any, choiceConfig: any, execId: any): any;
    setTextPosition(sprite: any, text: any, component: any): any;
    loadGeneralComponents(menuConfig: any, menu: any): any;
    loadButton(component: any, menu: any): any;
    loadSlider(component: any, menu: any): any;
    addThumbnail(thumbnail: any, slot: any): any;
    loadSaveSlot(component: any, menu: any): any;
    loadThumbnail(thumbnail: any, parent: any): any;
    loadComponent(type: any, component: any, menu: any): any;
    buttonsAction: object;
    currentMusic: any;
    choices: T;
    hud: T;
    currentMenu: any;
    menus: any;
    messageBox: TSprite;
    skipClickArea: any[];
    nameBox: TSprite;
    interrupts: T;
    previousMenu: any;
    saveSlots: any;
}
export default class RJSGUIByBuilder implements RJSGUIByBuilderInterface<Group, Sprite> {
    gui: any;
    currentMusic: any;
    choices: Group;
    hud: Group;
    interrupts: Group;
    game: RJS;
    currentMenu: any;
    menus: {};
    messageBox: any;
    ctc: Sprite;
    nameBox: Sprite;
    skipClickArea: any[];
    previousMenu: any;
    saveSlots: {};
    textLoop: any;
    constructor(gui: any, game: RJS);
    changeToLastInterrupt(choiceId: any): void;
    clear(): void;
    getAssets(): GUIAssets[];
    getChoiceTextStyle(): any;
    getFonts(argument?: any): any[];
    hideChoice(choiceId: any): void;
    hideChoices(): void;
    hideHUD(): void;
    hideMenu(menu: any, mute: any, callback?: any): void;
    hideText(): void;
    ignoreTap(pointer: any): boolean;
    init(): void;
    initHUD(hudConfig: any): void;
    initMenu(name: string, menuConfig: any): void;
    showChoices(choices: any, execId: any): void;
    showHUD(): void;
    showMenu(menu: any): void;
    showText(text: any, title: any, colour: any, callback: any): void;
    addThumbnail(thumbnail: any, slot: any): void;
    changeMenu(menu: any): void;
    createChoiceBox(choice: any, pos: any, index: any, choiceConfig: any, execId: any): Phaser.Button;
    loadButton(component: any, menu: any): void;
    loadComponent(type: any, component: any, menu: any): void;
    loadGeneralComponents(menuConfig: any, menu: any): void;
    loadSaveSlot(component: any, menu: any): void;
    loadSlider(component: any, menu: any): void;
    loadThumbnail(thumbnail: any, parent: any): void;
    setTextPosition(sprite: any, text: any, component: any): void;
    getChosenOptionColor(): number;
    sliderValueChanged: {
        textSpeed(newVal: any): void;
        autoSpeed(newVal: any): void;
        bgmv(newVal: any): void;
        sfxv(newVal: any): void;
    };
    buttonsAction: {
        start(): void;
        load(component: any): void;
        auto: () => void;
        skip: () => void;
        save(component: any): void;
        saveload(argument?: any): void;
        settings(): void;
        return(): void;
        mute(argument?: any): void;
    };
}
